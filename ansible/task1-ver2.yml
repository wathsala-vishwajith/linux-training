- name: 'Deploy gcp vm'
  hosts: localhost
  connection: local
  become: false
  gather_facts: no

  vars: 
    gcp_project: <gcp_project>
    gcp_cred_kind: "serviceaccount"
    gcp_cred_file: <cred_file>
    gcp_region: "us-central1"
    gcp_zone: "us-central1-a"
    first_instance: "instance1"
    second_instance: "instance2"
  # Roles & Tasks
  tasks:

  - name: create a disk
    gcp_compute_disk:
      name: "{{first_instance}}"
      size_gb: 30
      source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts
      zone: "{{ gcp_zone }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: disk

  - name: create a network
    gcp_compute_network:
      name: "{{first_instance}}"
      project: "{{ gcp_project }}"
      auto_create_subnetworks : yes
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: network

  - name: create a address
    gcp_compute_address:
      name: "{{first_instance}}"
      region: "{{ gcp_region }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: address1

  - name: create a instance
    gcp_compute_instance:
      name: "{{first_instance}}"
      project: "{{ gcp_project }}"
      zone: "{{ gcp_zone }}"
      machine_type: n1-standard-1
      disks:
      - auto_delete: 'true'
        boot: 'true'
        source: "{{ disk }}"
      labels:
        environment: testing
      network_interfaces:
      - network: "{{ network }}"
        access_configs:
        - name: External NAT
          nat_ip: "{{ address1 }}"
          type: ONE_TO_ONE_NAT
      metadata: enable-oslogin=TRUE
      auth_kind: serviceaccount
      service_account_file: "{{ gcp_cred_file }}"
      state: present

  - name: create a disk
    gcp_compute_disk:
      name: "{{second_instance}}"
      size_gb: 30
      source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts
      zone: "{{ gcp_zone }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: disk1

  - name: create a network
    gcp_compute_network:
      name: "{{second_instance}}"
      project: "{{ gcp_project }}"
      auto_create_subnetworks : yes
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: network1

  - name: create a address
    gcp_compute_address:
      name: "{{second_instance}}"
      region: "{{ gcp_region }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: address2

  - name: create a instance
    gcp_compute_instance:
      name: "{{second_instance}}"
      project: "{{ gcp_project }}"
      zone: "{{ gcp_zone }}"
      machine_type: n1-standard-1
      disks:
      - auto_delete: 'true'
        boot: 'true'
        source: "{{ disk1 }}"
      network_interfaces:
      - network: "{{ network1 }}"
        access_configs:
        - name: External NAT
          nat_ip: "{{ address2 }}"
          type: ONE_TO_ONE_NAT
      metadata: enable-oslogin=TRUE
      auth_kind: serviceaccount
      service_account_file: "{{ gcp_cred_file }}"
      state: present
   
  - name: Debug Information
    debug:
        msg:"{{ address2 }}"
      
  - name: Add tags to instance 1
    gce_tag:
      instance_name: "{{first_instance}}"
      tags: http-server,https-server
      zone: us-central1-a
      state: present    
  - name: Add tags to instance 2
    gce_tag:
      instance_name: "{{second_instance}}"
      tags: http-server,https-server
      zone: us-central1-a
      state: present 
      #  post_tasks:
        # - name: Save host data for first zone
        #  add_host: hostname={{ address1.address }} groupname=gce_task1_ips
        # - name: Save host data for second zone
        # add_host: hostname={{ address2.address }} groupname=gce_task1_ips

- name: Configure VM
  hosts: 35.225.30.4
  vars:
    http_host: "instance1"
  tasks:
  - name: install apache2
    apt: name=apache2 update_cache=yes state=latest
  - name: swap index.html
    file:
      src: ~/ansible-playground/files/index.html.j2"
      dest: "/var/www/html/index.html"
      notify: restart-apache2

- name: Configure VM
  hosts: 34.123.108.193
  vars:
    http_host: "instance2"
  tasks:
  - name: install apache2
    apt: name=apache2 update_cache=yes state=latest
  - name: swap index.html
    file:
      src: "~/ansible-playground/files/index.html.j2"
      dest: "/var/www/html/index.html"
      notify: restart-apache2

- handlers:
   - name : restart-apache2
     service:
         name: apache2
         state: restarted
